using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PenTest : MonoBehaviour
{
    public Color32 penColor;
    public float penSize = 0.05f;

    LineRenderer Ir;
    Vector3 mouseDist;
    List<Vector3> drawingPositions = new List<Vector3>

    // Start is called before the first frame update
    void Start()
    {
        Ir.startColor = (Color)penColor;
        Ir.endColor = (Color)penColor;

        Ir.endWidth = penSize;
        Ir.startWidth = penSize;

        Ir.positionCount = 0;
    }

    // Update is called once per frame
    void Update()
    {
        if(Input.GetKeyDown(KeyCode.M))
        {
            //리스트를 비움
            drawingPositions.Clear();

        }

        if (Input.GetKey(KeyCode.M))
        {
            //마우스 월드 좌표 계산
            Vector3 mouseWorldPosition = Camera.main.ScreenToWorldPoint(new Vector3(Input.mousePosition.x, Input.mousePosition.y, Camera.main.nearClipPlane));

            mouseDist = (mouseWorldPosition - Camera.main.transform.position).normalized;
            mouseDist = Camera.main.transform.position + mouseDist * 2f;

            if(drawingPositions.Count > 0)
            {
                //일정 거리 이상 움직였으면 현재 마우스의 위치를 리스트에 추가
                //if(Vector3.Distance(drawingPositions[drawingPositions.Count - 1], mouseDist) > 0.1f)
                if(Vector3.Distance(Ir.GetPosition(Ir.positionCount-1),mouseDist) > 0.1f)
                {
                    drawingPositions.Add(mouseDist);

                }

            }
            else if(Input.GetKeyUp(KeyCode.M))
            {
                //빈 게임 오브젝트를 만듦
                GameObject go = new GameObject("Draw");

                //생성된 오브젝트에 라인 렌더러 컴포넌트 추가
                LineRenderer Ir = go.AddComponent<LineRenderer>();

                //라인 렌더러 셋팅
                Ir.startColor = (Color)penColor;
                Ir.endColor = (Color)penColor;

                Ir.endWidth = penSize;
                Ir.startWidth = penSize;

                Ir.positionCount = drawingPositions.Count;

                //라인 렌더러에 저장된 자표 리스트를 배열로 변환하여 추가
                Ir.SetPosition(drawingPositions.ToArray());

                go.transform
            }

        }

    }
}
